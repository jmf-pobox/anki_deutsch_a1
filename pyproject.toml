[build-system]
metadata_path = "pyproject.toml"
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "langlearn"
version = "0.1.0"
description = "A Python tool for generating customized German language Anki decks"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    { name = "Your Name", email = "your.email@example.com" },
]
dependencies = [
    "genanki>=0.13.0",
    "boto3>=1.28.0",
    "anthropic>=0.8.0",
    "requests>=2.31.0",
    "python-pexels>=1.1",
    "mypy-boto3-polly>=1.34.0",
    "keyring>=24.3.0",
    "pandas>=2.2.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.5",
    "mypy>=1.7.0",
    "pytest>=7.4.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src/langlearn"]

[tool.hatch.envs.default]
dependencies = [
    "ruff>=0.1.5",
    "mypy>=1.7.0",
    "pytest>=7.4.0",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests tests/integration}"
test-unit = "pytest {args:tests --ignore=tests/integration}"
test-integration = "pytest {args:tests/integration}"
lint = "ruff check ."
format = "ruff format ."
type = "mypy src/langlearn tests"
check = ["lint", "type", "test"]
check-unit = ["lint", "type", "test-unit"]
check-integration = ["lint", "type", "test-integration"]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "RUF", # Ruff-specific rules
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --doctest-modules"
testpaths = [
    "tests",
] 