name: Quality Gates CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Non-secret environment variables
  AWS_DEFAULT_REGION: eu-central-1
  PYTHONUNBUFFERED: 1

jobs:
  # STAGE 1: Unit Tests & Quality Gates (No External Services)
  quality-gates:
    name: Mandatory Quality Gates
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install Hatch
      run: pip install hatch
    
    - name: MyPy Type Check (ZERO errors allowed)
      run: |
        echo "üîç Running MyPy --strict type checking..."
        hatch run type
        if [ $? -ne 0 ]; then
          echo "‚ùå FAILED: MyPy errors detected. NO MERGE ALLOWED."
          exit 1
        fi
        echo "‚úÖ SUCCESS: MyPy type checking passed - zero errors found"
    
    - name: Ruff Linting (ZERO violations allowed)
      run: |
        echo "üîç Running Ruff linting checks..."
        hatch run ruff check --fix
        if [ $? -ne 0 ]; then
          echo "‚ùå FAILED: Ruff violations detected. NO MERGE ALLOWED."
          exit 1
        fi
        echo "‚úÖ SUCCESS: Ruff linting passed - zero violations found"
    
    - name: Code Formatting Check
      run: |
        echo "üîç Checking code formatting..."
        hatch run format
        if ! git diff --exit-code; then
          echo "‚ùå FAILED: Code formatting issues detected. NO MERGE ALLOWED."
          exit 1
        fi
        echo "‚úÖ SUCCESS: Code formatting is correct"
    
    - name: Unit Test Suite (ALL must pass)
      env:
        # Real credentials from GitHub Secrets
        AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "üîç Running full unit test suite..."
        echo "‚ÑπÔ∏è  Using real credentials from GitHub Secrets"
        hatch run test-unit
        if [ $? -ne 0 ]; then
          echo "‚ùå FAILED: Unit tests failing. NO MERGE ALLOWED."
          exit 1
        fi
        echo "‚úÖ SUCCESS: All unit tests passed"
    
    # - name: Coverage Check (Must maintain ‚â•73%)
    #   env:
    #     AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
    #     ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
    #   run: |
    #     echo "üîç Running test coverage analysis..."
    #     hatch run test-cov --cov-fail-under=73
    #     if [ $? -ne 0 ]; then
    #       echo "‚ùå FAILED: Test coverage below 73%. NO MERGE ALLOWED."
    #       exit 1
    #     fi
    #     echo "‚úÖ SUCCESS: Test coverage maintained at ‚â•73%"
    
    - name: Final Verification
      env:
        AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "üîç Running final verification check..."
        hatch run type && hatch run test-unit
        if [ $? -ne 0 ]; then
          echo "‚ùå FAILED: Final verification failed. NO MERGE ALLOWED."
          exit 1
        fi
        echo "‚úÖ SUCCESS: All quality gates passed! Ready for merge."

  # STAGE 2: Integration Tests (Real External Services) - Optional
  integration-tests:
    name: Integration Tests (Live APIs)
    runs-on: ubuntu-latest
    needs: quality-gates  # Only run after quality gates pass
    # Make this job optional - only runs if secrets are configured
    # Skip for external contributors (forks don't have access to secrets)
    if: |
      github.event_name == 'push' || 
      (github.event.pull_request.head.repo.full_name == github.repository && 
       github.actor != 'dependabot[bot]')
    continue-on-error: true  # Don't block merge if integration tests fail
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install Hatch
      run: pip install hatch
    
    - name: Check for Required Secrets
      id: check-secrets
      run: |
        if [ -n "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
          echo "has_aws=true" >> $GITHUB_OUTPUT
        else
          echo "has_aws=false" >> $GITHUB_OUTPUT
        fi
        if [ -n "${{ secrets.PEXELS_API_KEY }}" ]; then
          echo "has_pexels=true" >> $GITHUB_OUTPUT
        else
          echo "has_pexels=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Run Integration Tests
      if: steps.check-secrets.outputs.has_aws == 'true'
      env:
        # Real credentials from GitHub Secrets
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
        PEXELS_API_KEY: ${{ secrets.PEXELS_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "üîç Running integration tests with live APIs..."
        hatch run test-integration
        if [ $? -ne 0 ]; then
          echo "‚ö†Ô∏è  WARNING: Some integration tests failed"
          echo "‚ÑπÔ∏è  This may be due to API rate limits or service issues"
          # Don't fail the job - integration tests are informational
        else
          echo "‚úÖ SUCCESS: All integration tests passed"
        fi
    
    - name: Skip Integration Tests (No Secrets)
      if: steps.check-secrets.outputs.has_aws != 'true'
      run: |
        echo "‚ö†Ô∏è  WARNING: Skipping integration tests - AWS credentials not configured"
        echo "‚ÑπÔ∏è  This is expected for:"
        echo "    - External contributors (forks)"
        echo "    - Dependabot PRs"
        echo "    - Repositories without configured secrets"
        echo ""
        echo "‚ÑπÔ∏è  To enable integration tests, configure the following secrets:"
        echo "    - AWS_ACCESS_KEY_ID"
        echo "    - AWS_SECRET_ACCESS_KEY"
        echo "    - PEXELS_API_KEY"
        echo "    - ANTHROPIC_API_KEY (optional)"